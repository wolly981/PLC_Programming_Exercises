TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK


PROGRAM pwm_test_program
  VAR
    PWM_CONTROLLER0 : PWM_CONTROLLER;
    START_PB : BOOL;
    Channel : SINT := 3;
    FREQ : REAL := 1.0;
    DUTY_CYCLE : REAL := 50.0;
  END_VAR
  VAR
    SERVO AT %QX0.1 : BOOL := 0;
    ANALOG_PWM AT %QW0 : UINT := 65535;
  END_VAR

  PWM_CONTROLLER0(CHANNEL := Channel, FREQ := FREQ, DUTY := DUTY_CYCLE);
  SERVO := PWM_CONTROLLER0.SUCCESS;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : pwm_test_program;
  END_RESOURCE
END_CONFIGURATION
